add_test([=[NegativeScenarios.Should_return_error_when_empty_collection]=]  C:/Git/LR1_karelin/out/build/x64-Debug/tests/lr1_tests.exe [==[--gtest_filter=NegativeScenarios.Should_return_error_when_empty_collection]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[NegativeScenarios.Should_return_error_when_empty_collection]=]  PROPERTIES WORKING_DIRECTORY C:/Git/LR1_karelin/out/build/x64-Debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[NegativeScenarios.Should_return_error_when_multiple_is_zero]=]  C:/Git/LR1_karelin/out/build/x64-Debug/tests/lr1_tests.exe [==[--gtest_filter=NegativeScenarios.Should_return_error_when_multiple_is_zero]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[NegativeScenarios.Should_return_error_when_multiple_is_zero]=]  PROPERTIES WORKING_DIRECTORY C:/Git/LR1_karelin/out/build/x64-Debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[NegativeScenarios.Should_return_error_when_multiple_is_negative]=]  C:/Git/LR1_karelin/out/build/x64-Debug/tests/lr1_tests.exe [==[--gtest_filter=NegativeScenarios.Should_return_error_when_multiple_is_negative]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[NegativeScenarios.Should_return_error_when_multiple_is_negative]=]  PROPERTIES WORKING_DIRECTORY C:/Git/LR1_karelin/out/build/x64-Debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[NegativeScenarios.Should_return_errors_when_multiple_is_zero_and_empty_collection]=]  C:/Git/LR1_karelin/out/build/x64-Debug/tests/lr1_tests.exe [==[--gtest_filter=NegativeScenarios.Should_return_errors_when_multiple_is_zero_and_empty_collection]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[NegativeScenarios.Should_return_errors_when_multiple_is_zero_and_empty_collection]=]  PROPERTIES WORKING_DIRECTORY C:/Git/LR1_karelin/out/build/x64-Debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[NegativeScenarios.Should_return_errors_when_multiple_is_zero_and_big_collection]=]  C:/Git/LR1_karelin/out/build/x64-Debug/tests/lr1_tests.exe [==[--gtest_filter=NegativeScenarios.Should_return_errors_when_multiple_is_zero_and_big_collection]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[NegativeScenarios.Should_return_errors_when_multiple_is_zero_and_big_collection]=]  PROPERTIES WORKING_DIRECTORY C:/Git/LR1_karelin/out/build/x64-Debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[NegativeScenarios.Should_return_error_when_too_big_numbers_in_collection]=]  C:/Git/LR1_karelin/out/build/x64-Debug/tests/lr1_tests.exe [==[--gtest_filter=NegativeScenarios.Should_return_error_when_too_big_numbers_in_collection]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[NegativeScenarios.Should_return_error_when_too_big_numbers_in_collection]=]  PROPERTIES WORKING_DIRECTORY C:/Git/LR1_karelin/out/build/x64-Debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[GetProducNegativeScenariostOfMultiples.Should_return_error_when_big_collection]=]  C:/Git/LR1_karelin/out/build/x64-Debug/tests/lr1_tests.exe [==[--gtest_filter=GetProducNegativeScenariostOfMultiples.Should_return_error_when_big_collection]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[GetProducNegativeScenariostOfMultiples.Should_return_error_when_big_collection]=]  PROPERTIES WORKING_DIRECTORY C:/Git/LR1_karelin/out/build/x64-Debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PositiveScenarios.Should_return_success_when_one_element]=]  C:/Git/LR1_karelin/out/build/x64-Debug/tests/lr1_tests.exe [==[--gtest_filter=PositiveScenarios.Should_return_success_when_one_element]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PositiveScenarios.Should_return_success_when_one_element]=]  PROPERTIES WORKING_DIRECTORY C:/Git/LR1_karelin/out/build/x64-Debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PositiveScenarios.Should_return_all_numbers_when_multiple_is_one]=]  C:/Git/LR1_karelin/out/build/x64-Debug/tests/lr1_tests.exe [==[--gtest_filter=PositiveScenarios.Should_return_all_numbers_when_multiple_is_one]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PositiveScenarios.Should_return_all_numbers_when_multiple_is_one]=]  PROPERTIES WORKING_DIRECTORY C:/Git/LR1_karelin/out/build/x64-Debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PositiveScenarios.Should_return_correct_result_when_1024_elements_in_collection]=]  C:/Git/LR1_karelin/out/build/x64-Debug/tests/lr1_tests.exe [==[--gtest_filter=PositiveScenarios.Should_return_correct_result_when_1024_elements_in_collection]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PositiveScenarios.Should_return_correct_result_when_1024_elements_in_collection]=]  PROPERTIES WORKING_DIRECTORY C:/Git/LR1_karelin/out/build/x64-Debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PositiveScenarios.Should_return_correct_answer_when_collection_contains_negative_numbers]=]  C:/Git/LR1_karelin/out/build/x64-Debug/tests/lr1_tests.exe [==[--gtest_filter=PositiveScenarios.Should_return_correct_answer_when_collection_contains_negative_numbers]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PositiveScenarios.Should_return_correct_answer_when_collection_contains_negative_numbers]=]  PROPERTIES WORKING_DIRECTORY C:/Git/LR1_karelin/out/build/x64-Debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PositiveScenarios.Should_return_first_number_when_greater_than_arr_size]=]  C:/Git/LR1_karelin/out/build/x64-Debug/tests/lr1_tests.exe [==[--gtest_filter=PositiveScenarios.Should_return_first_number_when_greater_than_arr_size]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PositiveScenarios.Should_return_first_number_when_greater_than_arr_size]=]  PROPERTIES WORKING_DIRECTORY C:/Git/LR1_karelin/out/build/x64-Debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  lr1_tests_TESTS NegativeScenarios.Should_return_error_when_empty_collection NegativeScenarios.Should_return_error_when_multiple_is_zero NegativeScenarios.Should_return_error_when_multiple_is_negative NegativeScenarios.Should_return_errors_when_multiple_is_zero_and_empty_collection NegativeScenarios.Should_return_errors_when_multiple_is_zero_and_big_collection NegativeScenarios.Should_return_error_when_too_big_numbers_in_collection GetProducNegativeScenariostOfMultiples.Should_return_error_when_big_collection PositiveScenarios.Should_return_success_when_one_element PositiveScenarios.Should_return_all_numbers_when_multiple_is_one PositiveScenarios.Should_return_correct_result_when_1024_elements_in_collection PositiveScenarios.Should_return_correct_answer_when_collection_contains_negative_numbers PositiveScenarios.Should_return_first_number_when_greater_than_arr_size)
